import time


# One-Class SVMでのマルウェアファミリ異常検知
def anomaly_detection_train(args, model, features_model, data_loaders):
    since = time.time()

    train_features = features_model.extract_features(data_loaders['train'])

    if args.debug:
        print(train_features)
        print(train_features.shape)
        print()

    print("anomaly model - Train phase")
    print('-' * 10)

    model.fit(train_features)

    time_elapsed = time.time() - since
    print('anomaly model - Training complete in {:.0f}m {:.0f}s'.format(time_elapsed // 60, time_elapsed % 60))
    print()


'''
def ocsvm_evaluate(nu, gamma):

    OC_SVM = OneClassSVM(nu=nu, kernel="rbf", gamma=gamma)
    OC_SVM.fit(train_features)

    pred = OC_SVM.predict(X_test)
    score = accuracy_score(y_test, pred)
    return score
'''