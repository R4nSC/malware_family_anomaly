from preprocessing import data_preprocessing
from embedding_train import embedding_train
from anomaly_train import anomaly_train
from parse_args import parse_args
from output import result_csv_output
from models import pca

if __name__ == '__main__':
    args = parse_args()

    data_loaders, datasets_size, class_names = data_preprocessing(args)

    features_model, classification_result = embedding_train(args, data_loaders, datasets_size)

    if args.network == 'pca':
        for i in range(10):
            anomaly_model, anomaly_result = anomaly_train(args, features_model, data_loaders)

            if args.csv:
                anomaly_result.insert(0, classification_result)
                result_csv_output(args, anomaly_result)

    else:
        anomaly_model, anomaly_result = anomaly_train(args, features_model, data_loaders)

        if args.csv:
            anomaly_result.insert(0, classification_result)
            result_csv_output(args, anomaly_result)
