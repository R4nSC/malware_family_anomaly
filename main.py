import sys
import torch
import torch.nn as nn
from torchvision import models

from preprocessing import data_preprocessing
from embedding_model import embedding_model
from test import *
from visualization import train_visualization
from anomaly_model import anomaly_detection_model
from config import *

if __name__ == '__main__':

    # 引数として'--help'を入力すると引数の設定を出力する
    if len(sys.argv) >= 2 and sys.argv[1] == '--help':
        print('The current argument settings are as follows.')
        print('     $ python main.py [NETWORK] [EPOCH] [BATCH_SIZE]')
        exit()

    # GPUを学習に利用可能かどうか
    if USE_GPU:
        print('Use GPU')
    else:
        print('Do not use GPU')
    print()

    data_loaders, datasets_size, class_names = data_preprocessing()

    features_model, loss, acc = embedding_model(data_loaders, datasets_size)

    # train_visualization(loss, acc, EMBEDDING_EPOCH)

    classification_test(features_model, data_loaders, datasets_size)

    anomaly_model = anomaly_detection_model(features_model, data_loaders)

    anomaly_detection_test(features_model, anomaly_model, data_loaders, datasets_size)
