import torch.nn as nn
from torchvision import models
from efficientnet_pytorch import EfficientNet


def load_alexnet():
    # AlexNetの学習済みモデルをロード
    alex_net = models.alexnet(pretrained=True)

    # AlexNetの最終層の次元数を変更
    alx_lt = list(alex_net.classifier)
    alx_lt[6] = nn.Linear(in_features=4096, out_features=20, bias=True)
    alex_net.classifier = nn.Sequential(alx_lt[0], alx_lt[1], alx_lt[2], alx_lt[3], alx_lt[4], alx_lt[5], alx_lt[6])

    return alex_net


def load_efficientnet():
    # EfficientNetの学習済みモデルをロード
    efficient_net = EfficientNet.from_pretrained('efficientnet-b0', num_classes=20)

    # efficient_net._fc = nn.Linear(2560, 20)

    return efficient_net
